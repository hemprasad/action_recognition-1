function build_vocabulary(conf)

    %% If vocabulary file already exists, return
    if(exist(conf.vocabPath, 'dir') == 2)
      disp('Vocab folder already exists!');
      return;
    end
    
    if(exist(conf.featuresPath, 'dir') ~= 7)
      disp(conf.featuresPath);
      disp('Features are not generated. Please do!');
      return;
    end
    
    %% Pull out random 100,000 features for each of the Traj, HoG, HoF, MBHx, MBHy features to build vocab
    classes = dir(conf.featuresPath);
    classes = classes(3:size(classes,1),:);
    numberOfClasses = size(classes,1);
    numberOfFeatPerSample = uint16(100000 / (2*numberOfClasses));
    % features = zeros(numberOfFeatPerSample*numberOfClasses, 436);
    features = [];
    
    for i=1:numberOfClasses
      className = [conf.featuresPath '/' classes(i).name];
      disp(['Getting features from ' classes(i).name ' class']);
      samples = dir(className);
      % samples = samples(3:size(samples,1),1);
      numberOfSamples = size(samples, 1);
      
      
      for j=1:numberOfSamples
        if(strcmp(samples(j).name,'.') || strcmp(samples(j).name,'..'))
          continue;
        end
        
        samplesName   = [className '/' samples(j).name];
        tempFeatures  = importdata(samplesName, '\t');
        end_row       = min(numberOfFeatPerSample, size(tempFeatures,1));
        features      = [features tempFeatures(1:end_row,:)'];
        
        % start_row     = 1 + (numberOfFeatPerSample * (i-1));
        % end_row       = (numberOfFeatPerSample * i);
        % features(start_row:end_row,:) = tempFeatures(1:numberOfFeatPerSample,:); 
      end
      
    end
    
    %% Quantize the features for each of the category
    disp('Building vocabulary for each of the feature type!');

    % Trajectory shape vocab
    traj_features   = features(11:40, :);
    traj_vocab      = vl_kmeans(traj_features, conf.numberOfWords, 'verbose', 'algorithm', 'elkan', 'MaxNumIterations', 50) ;
        
    % HoG vocab
    hog_features    = features(41:136, :);
    hog_vocab       = vl_kmeans(hog_features, conf.numberOfWords, 'verbose', 'algorithm', 'elkan', 'MaxNumIterations', 50) ;
    clear hog_features;
    
    % HoF vocab
    hof_features    = features(137:244, :);
    hof_vocab       = vl_kmeans(hof_features, conf.numberOfWords, 'verbose', 'algorithm', 'elkan', 'MaxNumIterations', 50) ;
    clear hof_features;
    
    % MBHx vocab
    mbhx_features   = features(245:340, :);
    mbhx_vocab      = vl_kmeans(mbhx_features, conf.numberOfWords, 'verbose', 'algorithm', 'elkan', 'MaxNumIterations', 50) ;
    
    % MBHy vocab
    mbhy_features   = features(341:436, :);
    mbhy_vocab      = vl_kmeans(mbhy_features, conf.numberOfWords, 'verbose', 'algorithm', 'elkan', 'MaxNumIterations', 50) ;
    
    
    %% Save the vocabulary
    save(conf.vocabPath, 'traj_vocab', 'hog_vocab', 'hof_vocab', 'mbhx_vocab', 'mbhy_vocab');
    
end
